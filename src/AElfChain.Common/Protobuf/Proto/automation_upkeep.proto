// the version of the language, use proto3 for contracts
syntax = "proto3";

package upkeep;

// some core imports for AElf chain types
import "aelf/core.proto";
import "aelf/options.proto";
import "upkeep_interface.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AetherLink.Contracts.Automation.Upkeep";

// the contract definition: a gRPC service definition.
service UpkeepContract {
    option (aelf.base) = "upkeep_interface.proto";
    option (aelf.csharp_state) = "AetherLink.Contracts.Automation.Upkeep.UpkeepContractState";
    
    rpc CreateMockEvent (aelf.Hash) returns (google.protobuf.Empty) {}
}

message Triggered {
    option (aelf.is_event) = true;
    string chain_id = 1;
    aelf.Hash block_hash = 2;
    int64 block_height = 3;
    string event_name = 4;
    int32 index = 5;
}

message LogEventCreated {
    option (aelf.is_event) = true;
    aelf.Hash mock_data = 1;
}